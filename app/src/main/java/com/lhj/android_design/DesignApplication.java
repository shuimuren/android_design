package com.lhj.android_design;import android.app.Application;import android.content.Context;import com.lhj.android_design.service.OkHttpUtil;import com.lhj.android_design.service.RetrofitServiceFactory;import com.lhj.android_design.utils.AppUtil;import com.mob.MobSDK;import com.orhanobut.logger.AndroidLogAdapter;import com.orhanobut.logger.Logger;import com.squareup.leakcanary.LeakCanary;import com.tencent.bugly.crashreport.CrashReport;import java.io.File;/** * Created by lhj on 18/5/8 */public class DesignApplication extends Application {    @Override    public void onCreate() {        super.onCreate();        Logger.addLogAdapter(new AndroidLogAdapter());        //初始化网络请求        OkHttpUtil.getInstance().init(getApplicationContext().getFilesDir() + File.separator + "design",                10 * 1024 * 1024, 20000, 20000, 20000);        OkHttpUtil.getInstance().setLog(true);        AppManager.getManagerInstance().initialize(getApplicationContext());        //重置网络请求        RetrofitServiceFactory.recreateService();        //初始化ShareSdk        MobSDK.init(this);        //初始化leakCanary        if (LeakCanary.isInAnalyzerProcess(this)) {            return;        } else {            LeakCanary.install(this);        }        //初始化bugly        initBugly();    }    private void initBugly() {        // 设置是否为上报进程        Context context = getApplicationContext();        // 获取当前包名        String packageName = context.getPackageName();        // 获取当前进程名        String processName = AppUtil.getProcessName(android.os.Process.myPid());        CrashReport.UserStrategy strategy = new CrashReport.UserStrategy(getApplicationContext());        strategy.setUploadProcess(processName == null || processName.equals(packageName));        CrashReport.initCrashReport(getApplicationContext(), strategy);    }}