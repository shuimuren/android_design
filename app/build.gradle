//声明Android程序，apply plugin: 'com.android.application'apply plugin: 'com.mob.sdk'apply plugin: 'channel'channel{    //指定渠道文件    channelFile = file("../channel")    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}    baseOutputDir = new File(project.buildDir, "channel")    apkNameFormat ='${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）    isFastMode = false    //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss    buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'}android {    //程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关    lintOptions {        //即使报错也不会停止打包        abortOnError false        //打包Release版本的时候是否进行检测        checkReleaseBuilds false    }    ////编译sdk的版本，也就是API Level，例如API-19、API-20、API-21等等    compileSdkVersion 27    //关闭Android Studio的PNG合法性检查    aaptOptions.cruncherEnabled = false    aaptOptions.useNewCruncher = false    defaultConfig { //默认配置        applicationId "com.lhj.android_design" //应用程序的包名        minSdkVersion 16 //最小sdk版本，如果设备小于这个版本或者大于maxSdkVersion将无法安装这个应用        targetSdkVersion 27 //目标sdk版本，充分测试过的版本（建议版本）        versionCode 1 //版本号，第一版是1，之后每更新一次加1        versionName "1.0" //版本名，显示给用户看到的版本号        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"        archivesBaseName = "androidDesign-$versionName" //指定打包成Jar文件时候的文件名称        ndk {            // 设置支持的SO库架构            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'        }        //当方法数超过65535(方法的索引使用的是一个short值，        //而short最大值是65535)的时候允许打包成多个dex文件，动态加载dex。这里面坑很深啊        multiDexEnabled true    }    //multiDex的一些相关配置，这样配置可以让你的编译速度更快//    dexOptions {//        //让它不要对Lib做preDexing//        preDexLibraries = false//        //开启incremental dexing,优化编译效率，这个功能android studio默认是关闭的。//        incremental true//        javaMaxHeapSize "4g"     //增加java堆内存大小//    }    signingConfigs {//签名配置        release {//发布版签名配置            storeFile file("tools/fk.jks")//密钥文件路径            storePassword "lhj123456"//密钥文件密码            keyAlias "design"//key别名            keyPassword "123456"//key密码            v1SigningEnabled true            v2SigningEnabled false        }        debug {//debug版签名配置            storeFile file("tools/fk.jks")            storePassword "lhj123456"            keyAlias "design"            keyPassword "123456"            v1SigningEnabled true            v2SigningEnabled false        }    }    buildTypes {        //release版本的配置，即生成正式版安装文件的配置        release {            signingConfig signingConfigs.release            zipAlignEnabled true  //是否支持zip            shrinkResources true  // 移除无用的resource文件            minifyEnabled true //是否对代码进行混淆，true表示混淆            //指定混淆时使用的规则文件；            // proguard-android.txt指所有项目通用的混淆规则，proguard-rules.pro当前项目特有的混淆规则            //release的Proguard默认为Module下的proguard-rules.pro文件            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'            debuggable false  //是否支持调试            //采用动态替换字符串的方式生成不同的release.apk            jniDebuggable false  //关闭jni调试        }        debug {//debug版本的配置            signingConfig signingConfigs.release            debuggable true            jniDebuggable true        }        compileOptions {            targetCompatibility 1.8            sourceCompatibility 1.8        }        MobSDK {            appKey "25b78b95c91c5"            appSecret "073e765112fc5dffeec0be5feed156d6"            ShareSDK {                //平台配置信息                devInfo {                    SinaWeibo {                        appKey "88001436"                        appSecret "af06736200cfe607a2ecae4a1bd3234f"                        //  callbackUri "http://www.sharesdk.cn"                        shareByAppClient false                    }                    Wechat {                        appId "wx4868b35061f87885"                        appSecret "64020361b8ec4c99936c0e3999a9f249"                    }                    QQ {                        appId "100371282"                        appKey "aed9b0303e3ed1e27bae87c33761161d"                    }                    Facebook {                        appKey "1412473428822331"                        appSecret "a42f4f3f867dc947b9ed6020c2e93558"                        //    callbackUri "https://mob.com"                    }                }            }        }        /*     productFlavors {                 //在这里你可以设置你的产品发布的一些东西，                 //比如你现在一共软件需要发布到不同渠道，                 //且不同渠道中的包名不同，那么可以在此进行配置；                 //甚至可以设置不同的 AndroidManifest.xml 文件。                 hebbe {                 }                 googlePlay {                 }                 solo {                 }             }*/    }    dependencies {       // debugImplementation project(':imagetool')        implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"        implementation fileTree(include: ['*.jar'], dir: 'libs')        implementation 'com.android.support.constraint:constraint-layout:1.1.0'        testImplementation 'junit:junit:4.12'        androidTestImplementation 'com.android.support.test:runner:1.0.2'        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'        implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibraryVersion}"        //cardview        implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibraryVersion}"        //eventBus        implementation "org.greenrobot:eventbus:${rootProject.ext.eventbusVersion}"        //网络相关        implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"        implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"        implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofitVersion}"        implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"        //日志相关        implementation "com.orhanobut:logger:${rootProject.ext.loggerVersion}"        //代码注解        implementation "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"        annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"        //下拉刷新        implementation "com.scwang.smartrefresh:SmartRefreshLayout:${rootProject.ext.smartRefreshVersion}"        //leakCanary内存泄漏收集        debugImplementation "com.squareup.leakcanary:${rootProject.ext.debugLeakCanaryVersion}"        releaseImplementation "com.squareup.leakcanary:${rootProject.ext.releaseLeakCanaryVersion}"        //banner轮播图        implementation "com.youth.banner:banner:${rootProject.ext.bannerVersion}"        //Glide图片加载        implementation "com.github.bumptech.glide:glide:${rootProject.ext.glideVersion}"        //RecyclerViewHelper        implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:${rootProject.ext.recylerViewHelperVersion}"        //腾讯bugly        implementation 'com.tencent.bugly:crashreport:latest.release'        //腾讯多渠道打包        implementation 'com.leon.channel:helper:2.0.1'    }}